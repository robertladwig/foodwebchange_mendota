parse = TRUE,size = rel(4.5),
label.y = 0.05,
label.x = 0.1) +
theme_minimal()
g8 <- ggplot(df,aes(Clearwater.Duration, AF)) +
geom_point() +
xlab('Yahara Q (cfs)') + ylab('Anoxic factor (d)') +
geom_smooth(method = "lm", se=FALSE, color="black", formula = y ~ (x)) +
stat_poly_eq(formula = my.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE,size = rel(4.5),
label.y = 0.05,
label.x = 0.1) +
theme_minimal()
g <- (g1 + g2) / (g3 + g4)  / (g5 + g6) / (g7 + g8); g
# PLOT: linear model
p <- ggplot(mydata, aes(fit, AF)) +
stat_smooth(method = lm) +
geom_point(size = 2) +
xlab('Predicted Anoxic Factor [d per season]')+
ylab('Anoxic Factor [d per season]')+
theme_bw()+
# xlim(43,68) +
# ylim(43,68)+
theme(text = element_text(size=10),
axis.text.x = element_text(angle=0, hjust=1));p
# PLOT: linear model
p <- ggplot(mydata, aes(fit, AF)) +
stat_smooth(method = lm) +
geom_point(size = 2) +
xlab('Predicted Anoxic Factor [d per season]')+
ylab('Anoxic Factor [d per season]')+
theme_bw()+
annotate("text", x = 70, y = 82.5, label = modeleq, size = 3)+
annotate("text", x = 50, y = 60, label = (paste0('R^{2} = ',round(sum.hypo1$r.squared,2))), size =8)
# PLOT: linear model
p <- ggplot(mydata, aes(fit, AF)) +
stat_smooth(method = lm) +
geom_point(size = 2) +
xlab('Predicted Anoxic Factor [d per season]')+
ylab('Anoxic Factor [d per season]')+
theme_bw()+
annotate("text", x = 70, y = 82.5, label = modeleq, size = 3)+
annotate("text", x = 50, y = 60, label = (paste0('R^{2} = ',round(sum.hypo1$r.squared,2))), size =8) +
theme(text = element_text(size=10),
axis.text.x = element_text(angle=0, hjust=1));p
# PLOT: linear model
p <- ggplot(mydata, aes(fit, AF)) +
stat_smooth(method = lm) +
geom_point(size = 2) +
xlab('Predicted Anoxic Factor [d per season]')+
ylab('Anoxic Factor [d per season]')+
theme_bw()+
annotate("text", x = 50, y = 82.5, label = modeleq, size = 3)+
annotate("text", x = 50, y = 60, label = (paste0('R^{2} = ',round(sum.hypo1$r.squared,2))), size =3) +
theme(text = element_text(size=10),
axis.text.x = element_text(angle=0, hjust=1));p
# PLOT: linear model
p <- ggplot(mydata, aes(fit, AF)) +
stat_smooth(method = lm) +
geom_point(size = 2) +
xlab('Predicted Anoxic Factor [d per season]')+
ylab('Anoxic Factor [d per season]')+
theme_bw()+
annotate("text", x = 60, y = 82.5, label = modeleq, size = 3)+
annotate("text", x = 50, y = 60, label = (paste0('R^{2} = ',round(sum.hypo1$r.squared,2))), size =3) +
theme(text = element_text(size=10),
axis.text.x = element_text(angle=0, hjust=1));p
# PLOT: linear model
p <- ggplot(mydata, aes(fit, AF)) +
stat_smooth(method = lm) +
geom_point(size = 2) +
xlab('Predicted Anoxic Factor [d per season]')+
ylab('Anoxic Factor [d per season]')+
theme_bw()+
annotate("text", x = 60, y = 82.5, label = modeleq, size = 3)+
annotate("text", x = 50, y = 60, label = (paste0('R2 = ',round(sum.hypo1$r.squared,2))), size =3) +
theme(text = element_text(size=10),
axis.text.x = element_text(angle=0, hjust=1));p
# PLOT: linear model
p <- ggplot(mydata, aes(fit, AF)) +
stat_smooth(method = lm) +
geom_point(size = 2) +
xlab('Predicted Anoxic Factor [d per season]')+
ylab('Anoxic Factor [d per season]')+
theme_bw()+
annotate("text", x = 60, y = 82.5, label = modeleq, size = 3)+
annotate("text", x = 50, y = 80, label = (paste0('R2 = ',round(sum.hypo1$r.squared,2))), size =3) +
theme(text = element_text(size=10),
axis.text.x = element_text(angle=0, hjust=1));p
# PLOT: linear model
p <- ggplot(mydata, aes(fit, AF)) +
stat_smooth(method = lm) +
geom_point(size = 2) +
xlab('Predicted Anoxic Factor [d per season]')+
ylab('Anoxic Factor [d per season]')+
theme_bw()+
annotate("text", x = 65, y = 82.5, label = modeleq, size = 3)+
annotate("text", x = 50, y = 80, label = (paste0('R2 = ',round(sum.hypo1$r.squared,2))), size =3) +
theme(text = element_text(size=10),
axis.text.x = element_text(angle=0, hjust=1));p
# PLOT: linear model
p <- ggplot(mydata, aes(fit, AF)) +
stat_smooth(method = lm) +
geom_point(size = 2) +
xlab('Predicted Anoxic Factor [d per season]')+
ylab('Anoxic Factor [d per season]')+
theme_bw()+
annotate("text", x = 61, y = 82.5, label = modeleq, size = 3)+
annotate("text", x = 50, y = 80, label = (paste0('R2 = ',round(sum.hypo1$r.squared,2))), size =3) +
theme(text = element_text(size=10),
axis.text.x = element_text(angle=0, hjust=1));p
p.linear <- p + geom_line(aes(y = lwr), color = "red", linetype = "dashed")+
geom_line(aes(y = upr), color = "red", linetype = "dashed"); p
# PLOT: linear model
p <- ggplot(mydata, aes(fit, AF)) +
stat_smooth(method = lm) +
geom_point(size = 2) +
xlab('Predicted Anoxic Factor [d per season]')+
ylab('Anoxic Factor [d per season]')+
theme_bw()+
# annotate("text", x = 61, y = 82.5, label = modeleq, size = 3)+
# annotate("text", x = 50, y = 80, label = (paste0('R2 = ',round(sum.hypo1$r.squared,2))), size =3) +
theme(text = element_text(size=10),
axis.text.x = element_text(angle=0, hjust=1));p
p.linear <- p + geom_line(aes(y = lwr), color = "red", linetype = "dashed")+
geom_line(aes(y = upr), color = "red", linetype = "dashed"); p
# PLOT: linear model
p <- ggplot(mydata, aes(fit, AF)) +
stat_smooth(method = lm) +
geom_point(size = 2) +
xlab('Predicted Anoxic Factor [d per season]')+
ylab('Anoxic Factor [d per season]')+
theme_bw()+
annotate("text", x = 61, y = 82.5, label = modeleq, size = 3)+
annotate("text", x = 50, y = 80, label = (paste0('R2 = ',round(sum.hypo1$r.squared,2))), size =3) +
theme(text = element_text(size=10),
axis.text.x = element_text(angle=0, hjust=1));p
p.linear <- p + geom_line(aes(y = lwr), color = "red", linetype = "dashed")+
geom_line(aes(y = upr), color = "red", linetype = "dashed"); p.linear
ggsave(file=paste0('../figs/linearModel.png'), p.linear, dpi = 300,width = 216,height = 216, units = 'mm')
hypo1
g <- (g1 + g4) / (g5 + g8)  / (p.linear) + plot_annotation(tag_levels = 'A') ; g
g8 <- ggplot(df,aes(Clearwater.Duration, AF)) +
geom_point() +
xlab('Clearwater duration') + ylab('Anoxic factor (d)') +
geom_smooth(method = "lm", se=FALSE, color="black", formula = y ~ (x)) +
stat_poly_eq(formula = my.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE,size = rel(4.5),
label.y = 0.05,
label.x = 0.1) +
theme_minimal()
g <- (g1 + g2) / (g3 + g4)  / (g5 + g6) / (g7 + g8); g
g <- (g1 + g4) / (g5 + g8)  / (p.linear) + plot_annotation(tag_levels = 'A') ; g
# PLOT: linear model
p <- ggplot(mydata, aes(fit, AF)) +
stat_smooth(method = lm) +
geom_point(size = 2) +
xlab('Predicted Anoxic Factor [d per season]')+
ylab('Anoxic Factor [d per season]')+
theme_minimal()+
annotate("text", x = 61, y = 82.5, label = modeleq, size = 3)+
annotate("text", x = 50, y = 80, label = (paste0('R2 = ',round(sum.hypo1$r.squared,2))), size =3) +
theme(text = element_text(size=10),
axis.text.x = element_text(angle=0, hjust=1));p
p.linear <- p + geom_line(aes(y = lwr), color = "red", linetype = "dashed")+
geom_line(aes(y = upr), color = "red", linetype = "dashed"); p.linear
g <- (g1 + g4) / (g5 + g8)  / (p.linear) + plot_annotation(tag_levels = 'A') ; g
ggsave(plot = g, '../figs/linear_comparison.png', dpi = 300, units = 'in', width = 7, height = 10)
# 2. Regression line + confidence intervals
modeleq <- paste0('y = ', round(sum.hypo1$coefficients[1,1],2),
' + ',round(sum.hypo1$coefficients[2,1],2),' Strat.Dur',
' + ',round(sum.hypo1$coefficients[3,1],2),' Days>0.5',
' + ',round(sum.hypo1$coefficients[4,1],2),' DO.Depl',
' + ',round(sum.hypo1$coefficients[5,1],2),' Clear.Dur',
' + e, where e ~ N(0,',round(sum.hypo1$sigma,2),")")
library(latex2exp)
pred.int <- predict(hypo1, interval = "confidence")
pred.int <- pred.int * attr(sc.info, 'scaled:scale')[7] + attr(sc.info, 'scaled:center')[7]
mydata <- cbind(data.frame('AF'  = df$AF), pred.int)
# PLOT: linear model
p <- ggplot(mydata, aes(fit, AF)) +
stat_smooth(method = lm) +
geom_point(size = 2) +
xlab('Predicted Anoxic Factor [d per season]')+
ylab('Anoxic Factor [d per season]')+
theme_minimal()+
annotate("text", x = 61, y = 82.5, label = modeleq, size = 3)+
annotate("text", x = 50, y = 80, label = (paste0('R2 = ',round(sum.hypo1$r.squared,2))), size =3) +
theme(text = element_text(size=10),
axis.text.x = element_text(angle=0, hjust=1));p
p.linear <- p + geom_line(aes(y = lwr), color = "red", linetype = "dashed")+
geom_line(aes(y = upr), color = "red", linetype = "dashed"); p.linear
ggsave(file=paste0('../figs/linearModel.png'), p.linear, dpi = 300,width = 216,height = 216, units = 'mm')
g <- (g1 + g4) / (g5 + g8)  / (p.linear) + plot_annotation(tag_levels = 'A') ; g
ggsave(plot = g, '../figs/linear_comparison.png', dpi = 300, units = 'in', width = 7, height = 10)
g5 <- ggplot(df) +
geom_line(aes(year, AF)) +
geom_point(aes(year, AF)) +
ylab('Anoxic Factor (days per season)') + xlab('') +
theme_bw()
g6 <- ggplot(df) +
geom_ribbon(aes(x = year, ymin = constant.low, ymax = constant.high), fill = 'grey80') +
geom_line(aes(x = year, y = linear)) +
geom_point(aes(x = year, y = linear)) +
geom_line(aes(x = year, y = spline), linetype = 2, color = 'red3') +
ylab('Stratification Duration (days)') + xlab('') +
theme_bw()
g7 <- ggplot(df, aes(year, Jz, col = 'Volumetric')) +
geom_line(aes(year, Jv, col = 'Volumetric')) +
# geom_line(aes(year, Jz, col = 'Median Flux')) +
geom_point(aes(year, Jv, col = 'Volumetric')) +
# geom_point(aes(year, Jz, col = 'Median Flux')) +
geom_smooth(method = "loess", size = 1.5) +
geom_line(aes(year, Ja , col = 'Areal')) +
geom_point(aes(year, Ja , col = 'Areal')) +
geom_smooth(aes(year, Ja , col = 'Areal'), method = "loess", size = 1.5) +
scale_y_continuous(sec.axis = sec_axis(~.*1, name = expression("Areal flux ["*g~m^{-2}*d^{-1}*"]"))) +
ylab(expression("Volumetric flux ["*g~m^{-3}*d^{-1}*"]")) + xlab('') +
theme_bw()+
theme(axis.line.y.right = element_line(color = "red"),
axis.ticks.y.right = element_line(color = "red"),
axis.text.y.right = element_text(color = "red"),
axis.title.y.right = element_text(color = "red"),
axis.line.y.left = element_line(color = "darkcyan"),
axis.ticks.y.left = element_line(color = "darkcyan"),
axis.text.y.left = element_text(color = "darkcyan"),
axis.title.y.left = element_text(color = "darkcyan"),
legend.position = "none"
)
g8 <- ggplot(df) +
geom_line(aes(year, Days.0.5.mg.L, col = '0.5 mg/L')) +
geom_point(aes(year, Days.0.5.mg.L, col = '0.5 mg/L')) +
geom_line(aes(year, Days.1.mg.L, col = '1 mg/L')) +
geom_point(aes(year, Days.1.mg.L, col = '1 mg/L')) +
geom_line(aes(year, Days.1.5.mg.L, col = '1.5 mg/L')) +
geom_point(aes(year, Days.1.5.mg.L, col = '1.5 mg/L')) +
geom_line(aes(year, Days.2.mg.L, col = '2 mg/L')) +
geom_point(aes(year, Days.2.mg.L, col = '2 mg/L')) +
geom_line(aes(year, Days.3.mg.L, col = '3 mg/L')) +
geom_point(aes(year, Days.3.mg.L, col = '3 mg/L')) +
ylab('Biomass over threshold (days per year)') + xlab('') +
theme_bw()+
theme(legend.position="bottom") +
theme(legend.title=element_blank())
#   # geom_line(aes(year, Jv, col = 'Volume')) +
#   geom_line(aes(year, Ja , col = 'Sediment')) +
#   # geom_line(aes(year, Jz, col = 'Median Sink')) +
#   # geom_point(aes(year, Jv, col = 'Volume')) +
#   geom_point(aes(year, Ja , col = 'Sediment')) +
#   # geom_point(aes(year, Jz, col = 'Median Sink')) +
#   # geom_smooth(method = "loess", size = 1.5) +
#   geom_smooth(aes(year, Ja , col = 'Sediment'), method = "loess", size = 1.5) +
#   ylab("Oxygen flux in g/m2/d") + xlab('') +
#   theme_bw()
g9 <- ggplot(df) +
geom_ribbon(aes(x = year, ymin = min.discharge, ymax = discharge), fill = 'grey80') +
geom_line(aes(year, discharge)) +
geom_point(aes(year, discharge)) +
ylab('Yahara Q (cfs)') + xlab('') +
theme_bw();
g10 <- ggplot(df) +
geom_line(aes(year, Clearwater.Duration)) +
geom_point(aes(year, Clearwater.Duration)) +
ylab('Clearwater dur. (days)') + xlab('') +
theme_bw(); g5 / g6 / g7 / g9 /g10 /g8
library(ggpubr)
df.prior = df %>%
dplyr::filter(year < 2010)
m.df.prior <- reshape2::melt(df.prior, id = 'year')
m.df.prior
compare_means(value ~ variable, data = m.df.prior)
compare_means(value ~ variable, data = m.df.prior %>% dplyr::filter(variable == 'med'))
m.df.prior %>% dplyr::filter(variable == 'med')
df.prior = df %>%
mutate(ifelse(year < 2010, 'prior','post'))
df.prior
df.prior = df %>%
mutate('class' = ifelse(year < 2010, 'prior','post'))
df.prior
df.prior = df %>%
mutate('class' = ifelse(year < 2010, 'prior','post')) %>%
select(class, AF, med, Jz, Days.0.5.mg.L, discharge, Clearwater.Duration)
df.prior = df %>%
mutate('class' = ifelse(year < 2010, 'prior','post')) %>%
dplyr::select(class, AF, med, Jz, Days.0.5.mg.L, discharge, Clearwater.Duration)
m.df.prior <- reshape2::melt(df.prior, id = 'class')
m.df.prior
compare_means(value ~ variable, data = m.df.prior %>% dplyr::filter(variable == 'med'))
m.df.prior <- reshape2::melt(df.prior, id = 'class')
compare_means(value ~ variable, data = m.df.prior %>% dplyr::filter(variable == 'med'))
m.df.prior %>% dplyr::filter(variable == 'med')
compare_means(value ~ class, data = m.df.prior %>% dplyr::filter(variable == 'med'))
compare_means(value ~ class, data =  m.df.prior %>% dplyr::filter(variable == 'med'), method ="kruskal.test")
p1 <- ggboxplot( m.df.prior %>% dplyr::filter(variable == 'med'), x = "class", y = "value",
palette = "jco", xlab = '', ylab = 'Stratification duration',
add = "jitter")
#  Add p-value
p1 = p1 + stat_compare_means()
# Change method
p + stat_compare_means(method = "t.test")
p1
#  Add p-value
p1 = p1 + stat_compare_means()
p1
# Change method
p1 + stat_compare_means(method = "t.test")
p1 <- ggboxplot( m.df.prior %>% dplyr::filter(variable == 'med'), x = "class", y = "value",
palette = "jco", xlab = '', ylab = 'Stratification duration',
add = "jitter")
# Change method
p1 + stat_compare_means(method = "t.test")
df.prior = df %>%
mutate('class' = ifelse(year < 2010, 'prior 2010','post 2010')) %>%
dplyr::select(class, AF, med, Jz, Days.0.5.mg.L, discharge, Clearwater.Duration)
m.df.prior <- reshape2::melt(df.prior, id = 'class')
compare_means(value ~ class, data = m.df.prior %>% dplyr::filter(variable == 'AF'))
compare_means(value ~ class, data =  m.df.prior %>% dplyr::filter(variable == 'AF'), method ="kruskal.test")
p1 <- ggboxplot( m.df.prior %>% dplyr::filter(variable == 'AF'), x = "class", y = "value",
palette = "jco", xlab = '', ylab = 'Anoxic Factor',
add = "jitter")
#  Add p-value
p1 = p1 + stat_compare_means()
# Change method
# p1 + stat_compare_means(method = "t.test")
compare_means(value ~ class, data = m.df.prior %>% dplyr::filter(variable == 'med'))
compare_means(value ~ class, data =  m.df.prior %>% dplyr::filter(variable == 'med'), method ="kruskal.test")
p2 <- ggboxplot( m.df.prior %>% dplyr::filter(variable == 'med'), x = "class", y = "value",
palette = "jco", xlab = '', ylab = 'Stratification duration',
add = "jitter")
#  Add p-value
p2 = p2 + stat_compare_means()
compare_means(value ~ class, data = m.df.prior %>% dplyr::filter(variable == 'Jz'))
compare_means(value ~ class, data =  m.df.prior %>% dplyr::filter(variable == 'Jz'), method ="kruskal.test")
p3 <- ggboxplot( m.df.prior %>% dplyr::filter(variable == 'Jz'), x = "class", y = "value",
palette = "jco", xlab = '', ylab = 'Total oxygen sink',
add = "jitter")
#  Add p-value
p3 = p3 + stat_compare_means()
compare_means(value ~ class, data = m.df.prior %>% dplyr::filter(variable == 'Days.0.5.mg.L'))
compare_means(value ~ class, data =  m.df.prior %>% dplyr::filter(variable == 'Days.0.5.mg.L'), method ="kruskal.test")
p4 <- ggboxplot( m.df.prior %>% dplyr::filter(variable == 'Days.0.5.mg.L'), x = "class", y = "value",
palette = "jco", xlab = '', ylab = 'Biomass over 0.5 mg/L',
add = "jitter")
#  Add p-value
p4 = p4 + stat_compare_means()
compare_means(value ~ class, data = m.df.prior %>% dplyr::filter(variable == 'discharge'))
compare_means(value ~ class, data =  m.df.prior %>% dplyr::filter(variable == 'discharge'), method ="kruskal.test")
p5 <- ggboxplot( m.df.prior %>% dplyr::filter(variable == 'discharge'), x = "class", y = "value",
palette = "jco", xlab = '', ylab = 'Discharge',
add = "jitter")
#  Add p-value
p5 = p5 + stat_compare_means()
compare_means(value ~ class, data = m.df.prior %>% dplyr::filter(variable == 'Clearwater.Duration'))
compare_means(value ~ class, data =  m.df.prior %>% dplyr::filter(variable == 'Clearwater.Duration'), method ="kruskal.test")
p6 <- ggboxplot( m.df.prior %>% dplyr::filter(variable == 'Clearwater.Duration'), x = "class", y = "value",
palette = "jco", xlab = '', ylab = 'Clearwater duration',
add = "jitter")
#  Add p-value
p6 = p6 + stat_compare_means()
(g5 / g6 / g7 / g9 / g10 /g8) + (p1 / p2 /p3 /p4/p5 /p6)
(g5 / g6 / g7 / g9 / g10 /g8) | (p1 / p2 /p3 /p4/p5 /p6)
ggsave(plot = (g5 / g6 / g7 / g9 / g10 /g8) | (p1 / p2 /p3 /p4/p5 /p6), '../figs/timeseries_comparison.png', dpi = 300, units = 'in', width = 20, height = 17)
ggsave(plot = (g5 / g6 / g7 / g9 / g10 /g8) | (p1 / p2 /p3 /p5/p6 /p4), '../figs/timeseries_comparison.png', dpi = 300, units = 'in', width = 20, height = 17)
png(file = "../figs/model.png",res = 300,width = 216,height = 216, units = 'mm')
c.plot <- corrplot(res, type = "upper", order = "alphabet", addCoef.col = "black",
tl.col = "black", tl.srt = 45, method = 'color', sig.level = 0.001, insig = "blank",
col=(brewer.pal(n=8, name="RdYlBu")));c.plot
dev.off()
res=cor(hyp.data2, method = c("pearson"))
# PLOT: correlation plot for importrant predictors
png(file = "../figs/model.png",res = 300,width = 216,height = 216, units = 'mm')
c.plot <- corrplot(res, type = "upper", order = "alphabet", addCoef.col = "black",
tl.col = "black", tl.srt = 45, method = 'color', sig.level = 0.001, insig = "blank",
col=(brewer.pal(n=8, name="RdYlBu")));c.plot
dev.off()
g5 <- ggplot(df) +
geom_line(aes(year, AF)) +
geom_point(aes(year, AF)) +
ylab('Anoxic Factor (days per season)') + xlab('') +
geom_vline(xintercept=2010, linetype = 'dashed') +
theme_bw()
g5
g5 <- ggplot(df) +
geom_line(aes(year, AF)) +
geom_point(aes(year, AF)) +
ylab('Anoxic Factor (days per season)') + xlab('') +
geom_vline(xintercept=2010, linetype = 'dashed') +
theme_bw()
g6 <- ggplot(df) +
geom_ribbon(aes(x = year, ymin = constant.low, ymax = constant.high), fill = 'grey80') +
geom_line(aes(x = year, y = linear)) +
geom_point(aes(x = year, y = linear)) +
geom_line(aes(x = year, y = spline), linetype = 2, color = 'red3') +
ylab('Stratification Duration (days)') + xlab('') +
geom_vline(xintercept=2010, linetype = 'dashed') +
theme_bw()
g7 <- ggplot(df, aes(year, Jz, col = 'Volumetric')) +
geom_line(aes(year, Jv, col = 'Volumetric')) +
# geom_line(aes(year, Jz, col = 'Median Flux')) +
geom_point(aes(year, Jv, col = 'Volumetric')) +
# geom_point(aes(year, Jz, col = 'Median Flux')) +
geom_smooth(method = "loess", size = 1.5) +
geom_line(aes(year, Ja , col = 'Areal')) +
geom_point(aes(year, Ja , col = 'Areal')) +
geom_smooth(aes(year, Ja , col = 'Areal'), method = "loess", size = 1.5) +
scale_y_continuous(sec.axis = sec_axis(~.*1, name = expression("Areal flux ["*g~m^{-2}*d^{-1}*"]"))) +
ylab(expression("Volumetric flux ["*g~m^{-3}*d^{-1}*"]")) + xlab('') +
geom_vline(xintercept=2010, linetype = 'dashed') +
theme_bw()+
theme(axis.line.y.right = element_line(color = "red"),
axis.ticks.y.right = element_line(color = "red"),
axis.text.y.right = element_text(color = "red"),
axis.title.y.right = element_text(color = "red"),
axis.line.y.left = element_line(color = "darkcyan"),
axis.ticks.y.left = element_line(color = "darkcyan"),
axis.text.y.left = element_text(color = "darkcyan"),
axis.title.y.left = element_text(color = "darkcyan"),
legend.position = "none"
)
g8 <- ggplot(df) +
geom_line(aes(year, Days.0.5.mg.L, col = '0.5 mg/L')) +
geom_point(aes(year, Days.0.5.mg.L, col = '0.5 mg/L')) +
geom_line(aes(year, Days.1.mg.L, col = '1 mg/L')) +
geom_point(aes(year, Days.1.mg.L, col = '1 mg/L')) +
geom_line(aes(year, Days.1.5.mg.L, col = '1.5 mg/L')) +
geom_point(aes(year, Days.1.5.mg.L, col = '1.5 mg/L')) +
geom_line(aes(year, Days.2.mg.L, col = '2 mg/L')) +
geom_point(aes(year, Days.2.mg.L, col = '2 mg/L')) +
geom_line(aes(year, Days.3.mg.L, col = '3 mg/L')) +
geom_point(aes(year, Days.3.mg.L, col = '3 mg/L')) +
ylab('Biomass over threshold (days per year)') + xlab('') +
theme_bw()+
theme(legend.position="bottom") +
geom_vline(xintercept=2010, linetype = 'dashed') +
theme(legend.title=element_blank())
# ggplot(coeff, aes(year, Ja, col = 'Volume')) +
#   # geom_line(aes(year, Jv, col = 'Volume')) +
#   geom_line(aes(year, Ja , col = 'Sediment')) +
#   # geom_line(aes(year, Jz, col = 'Median Sink')) +
#   # geom_point(aes(year, Jv, col = 'Volume')) +
#   geom_point(aes(year, Ja , col = 'Sediment')) +
#   # geom_point(aes(year, Jz, col = 'Median Sink')) +
#   # geom_smooth(method = "loess", size = 1.5) +
#   geom_smooth(aes(year, Ja , col = 'Sediment'), method = "loess", size = 1.5) +
#   ylab("Oxygen flux in g/m2/d") + xlab('') +
#   theme_bw()
g9 <- ggplot(df) +
geom_ribbon(aes(x = year, ymin = min.discharge, ymax = discharge), fill = 'grey80') +
geom_line(aes(year, discharge)) +
geom_point(aes(year, discharge)) +
ylab('Yahara Q (cfs)') + xlab('') +
geom_vline(xintercept=2010, linetype = 'dashed') +
theme_bw();
g10 <- ggplot(df) +
geom_line(aes(year, Clearwater.Duration)) +
geom_point(aes(year, Clearwater.Duration)) +
ylab('Clearwater dur. (days)') + xlab('') +
geom_vline(xintercept=2010, linetype = 'dashed') +
theme_bw(); g5 / g6 / g7 / g9 /g10 /g8
library(ggpubr)
df.prior = df %>%
mutate('class' = ifelse(year < 2010, 'prior 2010','post 2010')) %>%
dplyr::select(class, AF, med, Jz, Days.0.5.mg.L, discharge, Clearwater.Duration)
m.df.prior <- reshape2::melt(df.prior, id = 'class')
compare_means(value ~ class, data = m.df.prior %>% dplyr::filter(variable == 'AF'))
compare_means(value ~ class, data =  m.df.prior %>% dplyr::filter(variable == 'AF'), method ="kruskal.test")
p1 <- ggboxplot( m.df.prior %>% dplyr::filter(variable == 'AF'), x = "class", y = "value",
palette = "jco", xlab = '', ylab = 'Anoxic Factor',
add = "jitter")
#  Add p-value
p1 = p1 + stat_compare_means()
# Change method
# p1 + stat_compare_means(method = "t.test")
compare_means(value ~ class, data = m.df.prior %>% dplyr::filter(variable == 'med'))
compare_means(value ~ class, data =  m.df.prior %>% dplyr::filter(variable == 'med'), method ="kruskal.test")
p2 <- ggboxplot( m.df.prior %>% dplyr::filter(variable == 'med'), x = "class", y = "value",
palette = "jco", xlab = '', ylab = 'Stratification duration',
add = "jitter")
#  Add p-value
p2 = p2 + stat_compare_means()
compare_means(value ~ class, data = m.df.prior %>% dplyr::filter(variable == 'Jz'))
compare_means(value ~ class, data =  m.df.prior %>% dplyr::filter(variable == 'Jz'), method ="kruskal.test")
p3 <- ggboxplot( m.df.prior %>% dplyr::filter(variable == 'Jz'), x = "class", y = "value",
palette = "jco", xlab = '', ylab = 'Total oxygen sink',
add = "jitter")
#  Add p-value
p3 = p3 + stat_compare_means()
compare_means(value ~ class, data = m.df.prior %>% dplyr::filter(variable == 'Days.0.5.mg.L'))
compare_means(value ~ class, data =  m.df.prior %>% dplyr::filter(variable == 'Days.0.5.mg.L'), method ="kruskal.test")
p4 <- ggboxplot( m.df.prior %>% dplyr::filter(variable == 'Days.0.5.mg.L'), x = "class", y = "value",
palette = "jco", xlab = '', ylab = 'Biomass over 0.5 mg/L',
add = "jitter")
#  Add p-value
p4 = p4 + stat_compare_means()
compare_means(value ~ class, data = m.df.prior %>% dplyr::filter(variable == 'discharge'))
compare_means(value ~ class, data =  m.df.prior %>% dplyr::filter(variable == 'discharge'), method ="kruskal.test")
p5 <- ggboxplot( m.df.prior %>% dplyr::filter(variable == 'discharge'), x = "class", y = "value",
palette = "jco", xlab = '', ylab = 'Discharge',
add = "jitter")
#  Add p-value
p5 = p5 + stat_compare_means()
compare_means(value ~ class, data = m.df.prior %>% dplyr::filter(variable == 'Clearwater.Duration'))
compare_means(value ~ class, data =  m.df.prior %>% dplyr::filter(variable == 'Clearwater.Duration'), method ="kruskal.test")
p6 <- ggboxplot( m.df.prior %>% dplyr::filter(variable == 'Clearwater.Duration'), x = "class", y = "value",
palette = "jco", xlab = '', ylab = 'Clearwater duration',
add = "jitter")
#  Add p-value
p6 = p6 + stat_compare_means()
(g5 / g6 / g7 / g9 / g10 /g8) | (p1 / p2 /p3 /p5/p6 /p4)
ggsave(plot = (g5 / g6 / g7 / g9 / g10 /g8) | (p1 / p2 /p3 /p5/p6 /p4), '../figs/timeseries_comparison.png', dpi = 300, units = 'in', width = 20, height = 17)
